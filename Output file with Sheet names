import os
from openpyxl import load_workbook, Workbook

input_folder = 'Extracted Data/VRU Headform - Prediction tables'
output_folder = 'Extracted Data/VRU Headform - Color-wise graphs'

# Ensure output folder exists
os.makedirs(output_folder, exist_ok=True)

# Iterate through each Excel file in the input folder
for filename in os.listdir(input_folder):
    if filename.endswith('.xlsx'):
        # Load the input workbook
        input_path = os.path.join(input_folder, filename)
        input_wb = load_workbook(input_path)
        input_sheet = input_wb.active

        # Create a new workbook for output
        output_wb = Workbook()
        output_filename = os.path.join(output_folder, filename)
        
        # Get the sheet names to be created from the first sheet's second column
        sheet_names = [cell.value for cell in input_sheet['B'] if cell.value is not None]

        for sheet_name in sheet_names:
            # Create new sheet in output file
            output_sheet = output_wb.create_sheet(sheet_name)
            
            # Add headers 'Car Name' and 'Values'
            output_sheet.append(['Car Name', 'Values'])

            # Iterate through sheets in the input file to find the sheet names
            for input_sheet_name in input_wb.sheetnames:
                input_sheet = input_wb[input_sheet_name]
                found_value = None
                
                # Search for the word (output sheet name) in the input sheet
                for row in input_sheet.iter_rows(min_row=1, max_row=input_sheet.max_row, min_col=1, max_col=input_sheet.max_column):
                    for cell in row:
                        if cell.value == sheet_name:
                            found_value = row[1].value if len(row) > 1 else None
                            break
                    if found_value:
                        break
                
                # Append the data to the output sheet
                output_sheet.append([input_sheet_name, found_value])

        # Remove default sheet created by Workbook
        if 'Sheet' in output_wb.sheetnames:
            del output_wb['Sheet']

        # Save the output workbook
        output_wb.save(output_filename)
        print(f'Processed and saved: {output_filename}')
