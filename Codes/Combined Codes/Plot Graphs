import os
import pandas as pd
import openpyxl
import time
from openpyxl import load_workbook, Workbook

def extract_data_from_excel(file_path):
    data = []
    first_word = None
    column_headers = None
    try:
        workbook = openpyxl.load_workbook(file_path, data_only=True)
        
        if "OVERALL RATING" in workbook.sheetnames:
            overall_rating_sheet = workbook["OVERALL RATING"]
            for row in overall_rating_sheet.iter_rows():
                for cell in row:
                    if cell.value:
                        first_word = str(cell.value)
                        break
                if first_word:
                    break

        if "VRU Headform" in workbook.sheetnames:
            vru_headform_sheet = workbook["VRU Headform"]
            prediction_cell = None
            percentage_cell = None
            for row in vru_headform_sheet.iter_rows():
                for cell in row:
                    if cell.value == "PREDICTION":
                        prediction_cell = cell
                    elif cell.value == "%-age":
                        percentage_cell = cell
                    if prediction_cell and percentage_cell:
                        break

            if prediction_cell and percentage_cell:
                start_row = prediction_cell.row
                start_col = prediction_cell.column
                end_col = percentage_cell.column

                column_headers = [vru_headform_sheet.cell(row=start_row - 1, column=j).value
                                  for j in range(start_col, end_col + 1)]

                data = [
                    [vru_headform_sheet.cell(row=i, column=j).value
                     for j in range(start_col, end_col + 1)]
                    for i in range(start_row, start_row + 10)
                ]
    except Exception as e:
        print(f"Error processing {file_path}: {e}")
        return None, None, None

    return first_word, data, column_headers

def print_table(df):
    print(df.to_string(index=False))

root_directory = "Euro NCAP"
output_directory = "Extracted Data/VRU Headform (C) - Color-wise data"

if not os.path.exists(output_directory):
    os.makedirs(output_directory)

start_time = time.time()

for folder_name in os.listdir(root_directory):
    folder_path = os.path.join(root_directory, folder_name)
    
    if os.path.isdir(folder_path):
        first_word_of_folder = folder_name.split()[0]
        car_values = {}
        column_headers = None
        
        for subdir, dirs, files in os.walk(folder_path):
            for file in files:
                if file.endswith('.xlsx') or file.endswith('.xls'):
                    file_path = os.path.join(subdir, file)
                    first_word, data, headers = extract_data_from_excel(file_path)
                    if first_word and data:
                        if column_headers is None:
                            column_headers = headers
                        
                        df = pd.DataFrame(data)
                        if not df.empty:
                            df.columns = df.iloc[0]
                            df = df[1:]
                            df = df.dropna(how='all').dropna(axis=1, how='all')

                            print(f"\nExtracted Word: {first_word}")
                            print("Extracted Table:")
                            print_table(df)

                            if first_word not in car_values:
                                car_values[first_word] = {column: [] for column in column_headers}
                            for column in column_headers:
                                if column in df.columns:
                                    car_values[first_word][column].extend(df[column].tolist())
                                else:
                                    car_values[first_word][column].extend([None] * len(df))
        
        output_filename = os.path.join(output_directory, f"{first_word_of_folder}_cars_combined.xlsx")
        output_wb = Workbook()
        output_sheet = output_wb.active

        if column_headers:
            output_sheet.append(['Car Names'] + column_headers)

            for car_name, values in car_values.items():
                row_data = [car_name] + [values.get(header, [None])[0] for header in column_headers]
                output_sheet.append(row_data)

            output_wb.save(output_filename)
            print(f'Processed and saved: {output_filename}')

end_time = time.time()
execution_time = end_time - start_time

print(f"\nScript executed in {execution_time:.2f} seconds.")
