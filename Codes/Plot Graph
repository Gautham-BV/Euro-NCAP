import pandas as pd
import matplotlib.pyplot as plt
import os
from openpyxl import Workbook
from openpyxl.drawing.image import Image
from io import BytesIO

# Set input and output folder paths
input_folder = 'Extracted Data/VRU Headform - Color-wise data'
output_folder = 'Extracted Data/VRU Headform - Color-wise graphs'

# Create output folder if it doesn't exist
os.makedirs(output_folder, exist_ok=True)

# Loop through each Excel file in the input folder
for file_name in os.listdir(input_folder):
    if file_name.endswith('.xlsx'):
        file_path = os.path.join(input_folder, file_name)
        
        # Read Excel file
        df = pd.read_excel(file_path)
        
        # Create a new Workbook
        wb = Workbook()
        wb.remove(wb.active)  # Remove the default sheet
        
        # Generate scatter plots
        for col in df.columns[1:]:
            fig, ax = plt.subplots()
            ax.scatter(df[df.columns[0]], df[col], label=col, s=1)  # Set marker size to 1
            
            # Calculate the average value for the y-axis
            avg_value = df[col].mean()
            
            # Plot the average value as a horizontal orange line
            ax.axhline(y=avg_value, color='orange', linestyle='--', label=f'Average: {avg_value:.2f}')
            
            ax.set_xlabel(df.columns[0], fontsize=10)  # Reduce x-axis label font size
            ax.set_ylabel('%-age', fontsize=10)  # Set y-axis label to '%-age'
            ax.set_title(f'{col}', fontsize=12)  # Reduce title font size
            ax.xaxis.set_tick_params(rotation=90, labelsize=6)  # Reduce x-axis label font size
            ax.yaxis.set_tick_params(labelsize=8)  # Reduce y-axis label font size
            ax.legend(fontsize=8)  # Adjust legend font size
            
            # Adjust layout to make sure labels are fully visible
            plt.tight_layout()
            
            # Save plot to a BytesIO object
            img_stream = BytesIO()
            plt.savefig(img_stream, format='png', bbox_inches='tight')  # Use bbox_inches='tight' to crop extra whitespace
            plt.close(fig)
            
            # Add image to Excel in a new sheet
            img_stream.seek(0)
            img = Image(img_stream)
            
            # Create a new sheet with the graph title
            sheet_title = f'{col}'
            sheet_title = sheet_title[:31]  # Limit sheet name to 31 characters
            ws = wb.create_sheet(title=sheet_title)
            
            img.anchor = 'A1'
            ws.add_image(img)
            
            # Adjust row height for spacing
            ws.row_dimensions[1].height = 300  # Adjust height for spacing
        
        # Save Excel file with graphs
        output_file_path = os.path.join(output_folder, file_name)
        wb.save(output_file_path)

print("Graphs with reduced point size have been added to separate sheets in the Excel files.")
