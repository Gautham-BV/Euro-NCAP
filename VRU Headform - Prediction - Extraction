import os
import pandas as pd
import openpyxl

def extract_data_from_excel(file_path):
    header = None
    data = []
    try:
        # Load the workbook and sheets
        workbook = openpyxl.load_workbook(file_path, data_only=True)
        
        # Extract the first word from the "OVERALL RATING" sheet
        if "OVERALL RATING" in workbook.sheetnames:
            overall_rating_sheet = workbook["OVERALL RATING"]
            first_word = None
            for row in overall_rating_sheet.iter_rows():
                for cell in row:
                    if cell.value:
                        first_word = str(cell.value)
                        break
                if first_word:
                    break
        else:
            return None, None

        # Extract the data from the "VRU Headform" sheet between "PREDICTION" and "%-age"
        if "VRU Headform" in workbook.sheetnames:
            vru_headform_sheet = workbook["VRU Headform"]
            prediction_cell = None
            percentage_cell = None
            for row in vru_headform_sheet.iter_rows():
                for cell in row:
                    if cell.value == "PREDICTION":
                        prediction_cell = cell
                    elif cell.value == "%-age":
                        percentage_cell = cell
                    if prediction_cell and percentage_cell:
                        break

            if prediction_cell and percentage_cell:
                start_row = prediction_cell.row
                start_col = prediction_cell.column
                end_col = percentage_cell.column

                # Extract the data from the rows between "PREDICTION" and "%-age"
                data = [
                    [vru_headform_sheet.cell(row=i, column=j).value
                     for j in range(start_col, end_col + 1)]
                    for i in range(start_row, start_row + 10)
                ]
    except Exception as e:
        print(f"Error processing {file_path}: {e}")
        return None, None

    return first_word, data

def print_table(df):
    # Format and print the DataFrame
    print(df.to_string(index=False))

# Define the root directory containing all the subdirectories and files
root_directory = "Euro NCAP"

# Ensure the output directory exists
if not os.path.exists("Results"):
    os.makedirs("Results")

# Iterate through each subdirectory in the root directory
for subdir in os.listdir(root_directory):
    subdir_path = os.path.join(root_directory, subdir)
    
    # Check if it's a directory
    if os.path.isdir(subdir_path):
        # Define the output file path for the combined data
        output_file = os.path.join("Results", f"{subdir}_combined_data.xlsx")

        # Initialize a new Excel writer
        with pd.ExcelWriter(output_file, engine='openpyxl') as writer:
            # Walk through the directory tree
            for dirpath, dirs, files in os.walk(subdir_path):
                for file in files:
                    # Check if the file is an Excel file
                    if file.endswith('.xlsx') or file.endswith('.xls'):
                        # Create the full file path
                        file_path = os.path.join(dirpath, file)
                        first_word, data = extract_data_from_excel(file_path)
                        if first_word and data:
                            # Create a DataFrame from the data and take the first row as header
                            df = pd.DataFrame(data)
                            if not df.empty:
                                # Use the first row as header and drop the first row
                                df.columns = df.iloc[0]
                                df = df[1:]
                                # Drop rows and columns with NaN values
                                df = df.dropna(how='all').dropna(axis=1, how='all')
                                
                                # Print the formatted DataFrame
                                print(f"\nExtracted Word: {first_word}")
                                print("Extracted Table:")
                                print_table(df)
                                
                                # Write to the new Excel sheet with the extracted word as the sheet name
                                sheet_name = first_word if len(first_word) <= 31 else first_word[:31]  # Sheet names are limited to 31 characters
                                df.to_excel(writer, sheet_name=sheet_name, index=False)

        print(f"Data extraction complete for folder '{subdir}'. Results saved in {output_file}.")
